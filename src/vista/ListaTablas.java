
package vista;

import Controlador.Controlador;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class ListaTablas extends javax.swing.JFrame {

    /**
     * Creates new form ListaTablas
     */
    DefaultTableModel model;
    String SeleccionAtributos;
    int tamano;
    public static String nombreBD;
    public static String nombreTabla;
    public static String tipoReporte;

    public ListaTablas() {
        initComponents();
        model = new DefaultTableModel();
        model.addColumn("Nombre de los Atributos");
        model.addColumn("Seleccionar");
        Class[] types = new Class[]{
            java.lang.Object.class, java.lang.Boolean.class
        };
        System.out.println("jfnknf: " + nombreBD);
        ListarTabla();
        MostrarAtributo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        atributos = new javax.swing.JTable();
        ListaTablas = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        reporte = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        atributos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        atributos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre de los atributos", "Seleccionar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(atributos);

        ListaTablas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ListaTablas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        ListaTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaTablasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Tablas:");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Generar reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tipo de reporte:");

        reporte.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        reporte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "CSV", "Excel" }));
        reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(ListaTablas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(reporte, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ListaTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(reporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListaTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaTablasActionPerformed
        // TODO add your handling code here:

        limpiarAtributo();
        nombreTabla = ListaTablas.getSelectedItem().toString();
        System.out.println("La tabla: " + nombreTabla);
        MostrarAtributo();
        crearChec(1, atributos);

    }//GEN-LAST:event_ListaTablasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println(tipoReporte);
        if (tipoReporte != null) {
            try {
                // TODO add your handling code here:
                Controlador contra = new Controlador();
                SeleccionAtributos = "";
                tamano = 0;
                for (int i = 0; i < atributos.getRowCount(); i++) {
                    if (selector(i, 1, atributos)) {
                        SeleccionAtributos += atributos.getValueAt(i, 0) + ",";
                        tamano++;
                    }
                }
                SeleccionAtributos = SeleccionAtributos.substring(0, SeleccionAtributos.length() - 1);;
                System.out.println(SeleccionAtributos);
                System.out.println(tamano);
                contra.reporte(nombreBD, SeleccionAtributos, nombreTabla, tamano, tipoReporte);
                JOptionPane.showMessageDialog(null, "Reporte generado en "+tipoReporte);
                SeleccionAtributos = "";
                tamano = 0;
            } catch (IOException ex) {
                Logger.getLogger(ListaTablas.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error al generar el reporte.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un tipo de reporte.");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void reporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteActionPerformed
        // TODO add your handling code here:
        tipoReporte = reporte.getSelectedItem().toString();

    }//GEN-LAST:event_reporteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaBD().setVisible(true);
            }
        });
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaTablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaTablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaTablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaTablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ListaTablas;
    private javax.swing.JTable atributos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox reporte;
    // End of variables declaration//GEN-END:variables

    public void ListarTabla() {
        Controlador contra = new Controlador();
        List<String> lista = new ArrayList<>();
        lista = contra.listaTablas(nombreBD);
        int i = 0;

        String[] array = new String[lista.size()];
        array = lista.toArray(array);
        //Llenado de la tabla
        while (i < array.length) {
            System.out.println("x: " + array[i]);
            ListaTablas.addItem(array[i]);
            i++;

        }

    }

    public void MostrarAtributo() {
        Controlador contra = new Controlador();
        List<String> lista = new ArrayList<>();
        lista = contra.listaAtributos(nombreBD, nombreTabla);
        int i = 0;

        String[] array = new String[lista.size()];
        array = lista.toArray(array);
        Object fila[] = new Object[2];
        //Llenado de la tabla
        while (i < array.length) {
            fila[0] = array[i];
            model.addRow(fila);

            i++;
        }
        atributos.setModel(model);

    }

    //limpia el jtable
    public void limpiarAtributo() {
        model = new DefaultTableModel();
        model.addColumn("Nombre de los Atributos");
        model.addColumn("Seleccionar");
        atributos.setModel(model);
    }

    public void crearChec(int column, JTable table) {
        TableColumn tc = table.getColumnModel().getColumn(column);
        tc.setCellEditor(table.getDefaultEditor(Boolean.class));
        tc.setCellRenderer(table.getDefaultRenderer(Boolean.class));
    }

    public boolean selector(int row, int column, JTable table) {
        return table.getValueAt(row, column) != null;
    }
}
